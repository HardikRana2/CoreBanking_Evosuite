/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 22 11:34:38 GMT 2022
 */

package io.diffblue.corebanking.compliance;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.diffblue.corebanking.account.Account;
import io.diffblue.corebanking.client.Client;
import io.diffblue.corebanking.compliance.CheckCompliance;
import io.diffblue.corebanking.compliance.rules.ComplianceRuleBalanceAboveOrEqualToZero;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CheckCompliance_ESTest extends CheckCompliance_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        CheckCompliance.checkAccountCompliance((List<Account>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.diffblue.corebanking.compliance.CheckCompliance", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CheckCompliance.purgeComplianceResults();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ComplianceRuleBalanceAboveOrEqualToZero complianceRuleBalanceAboveOrEqualToZero0 = new ComplianceRuleBalanceAboveOrEqualToZero();
      Account account0 = new Account((-218L), (Client) null, 2595L);
      complianceRuleBalanceAboveOrEqualToZero0.addToNonCompliantAccounts(account0);
      List<Account> list0 = complianceRuleBalanceAboveOrEqualToZero0.getNonCompliantAccounts();
      CheckCompliance.checkAccountCompliance(list0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CheckCompliance checkCompliance0 = new CheckCompliance();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CheckCompliance.viewComplianceCheckResults();
  }
}
