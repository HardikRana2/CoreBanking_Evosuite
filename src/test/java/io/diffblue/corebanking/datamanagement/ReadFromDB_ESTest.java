/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 22 11:40:28 GMT 2022
 */

package io.diffblue.corebanking.datamanagement;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.diffblue.corebanking.CoreBanking;
import io.diffblue.corebanking.datamanagement.ReadFromDB;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReadFromDB_ESTest extends ReadFromDB_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReadFromDB.readFromDB((CoreBanking) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.diffblue.corebanking.datamanagement.ReadFromDB", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CoreBanking coreBanking0 = new CoreBanking();
      // Undeclared exception!
      ReadFromDB.readFromDB(coreBanking0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReadFromDB readFromDB0 = new ReadFromDB();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      ReadFromDB.readFromDB();
  }
}
