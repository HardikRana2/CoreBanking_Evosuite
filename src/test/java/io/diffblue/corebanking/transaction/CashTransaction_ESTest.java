/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 22 11:17:30 GMT 2022
 */

package io.diffblue.corebanking.transaction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.diffblue.corebanking.account.Account;
import io.diffblue.corebanking.client.Client;
import io.diffblue.corebanking.transaction.CashTransaction;
import io.diffblue.corebanking.transaction.Transaction;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CashTransaction_ESTest extends CashTransaction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Client client0 = new Client("");
      Account account0 = new Account(1085L, client0, (-326L));
      CashTransaction cashTransaction0 = new CashTransaction((-4242L), (Date) null, account0);
      String string0 = cashTransaction0.getTarget();
      assertEquals("CASH", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Client client0 = new Client("A4 nume: ");
      Account account0 = new Account((-3048L), client0, (-3048L));
      CashTransaction cashTransaction0 = new CashTransaction((-3048L), mockDate0, account0);
      cashTransaction0.executeTransaction();
      try { 
        cashTransaction0.executeTransaction();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // This transaction was already executed!
         //
         verifyException("io.diffblue.corebanking.transaction.CashTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Account account0 = new Account((-97L), (Client) null, (-97L));
      account0.closeAccount();
      CashTransaction cashTransaction0 = new CashTransaction((-97L), (Date) null, account0);
      try { 
        cashTransaction0.executeTransaction();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The target account is closed.
         //
         verifyException("io.diffblue.corebanking.transaction.CashTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Client client0 = new Client("ource: ");
      Account account0 = new Account((-261L), client0, (-261L));
      CashTransaction cashTransaction0 = new CashTransaction(4, mockDate0, account0);
      cashTransaction0.executeTransaction();
      assertEquals(Transaction.TransactionState.EXECUTED, cashTransaction0.getTransactionState());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Client client0 = new Client("A4 nume: ");
      Account account0 = new Account((-3048L), client0, (-3048L));
      CashTransaction cashTransaction0 = new CashTransaction((-3048L), mockDate0, account0);
      String string0 = cashTransaction0.toString();
      assertEquals("Transaction: | 14.02.14\t| Source: -3048\t| Target: CASH\t| Amount: -3048\t| Balance: 0\t| Transaction state: NOT_EXECUTED_YET\t|", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2, (-241), 0, 2, (-3381), 2);
      CashTransaction cashTransaction0 = new CashTransaction(0L, mockDate0, (Account) null);
      // Undeclared exception!
      try { 
        cashTransaction0.getTarget();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.diffblue.corebanking.transaction.CashTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2, (-241), 0, 2, (-3381), 2);
      CashTransaction cashTransaction0 = new CashTransaction(0L, mockDate0, (Account) null);
      String string0 = cashTransaction0.getSource();
      assertEquals("CASH", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MockDate mockDate0 = new MockDate(947, 947, 947, 947, 947);
      CashTransaction cashTransaction0 = new CashTransaction((-1064L), mockDate0, (Account) null);
      // Undeclared exception!
      try { 
        cashTransaction0.getSource();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.diffblue.corebanking.transaction.CashTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      CashTransaction cashTransaction0 = new CashTransaction(0L, mockDate0, (Account) null);
      // Undeclared exception!
      try { 
        cashTransaction0.executeTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.diffblue.corebanking.transaction.CashTransaction", e);
      }
  }
}
